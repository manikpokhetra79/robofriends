{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","robot","className","src","username","alt","name","email","CardList","robots","map","index","Scroll","props","style","overflow","border","height","children","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","e","setState","searchfield","target","value","state","fetch","then","res","json","users","filteredRobots","this","filter","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAoBeA,EAlBF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKA,UAAU,QACf,8BACE,qBACEC,IAAG,+BAA0BF,EAAMG,SAAhC,iBACHC,IAAI,aAGR,gCACE,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCFHC,EATE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,mCACGA,EAAOC,KAAI,SAACT,EAAOU,GAAR,OACV,cAAC,EAAD,CAAMV,MAAOA,GAAYU,SCQlBC,EAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,SAAU,SACVC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCIEC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKlB,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVmB,KAAK,OACLC,YAAY,eACZC,SAAUH,OC0CHI,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAjBxB,EAAKC,MAAQ,CACXtB,OAAQ,GACRmB,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKT,SAAS,CACZlB,OAAQ2B,S,oBAUhB,WAAU,IAAD,OACDC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAC9B,GAE/C,OAAOA,EAAOH,KACXkC,cACAC,SAAS,EAAKV,MAAMH,YAAYY,kBAGrC,OAAsB,IADPF,KAAKP,MAAMtB,OACfiC,OACF,4CAGL,sBAAKxC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWkB,aAAckB,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUhB,OAAQ4B,a,GAvCZM,IAAMC,WCQTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7720cf61.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ robot }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <div className=\"row\"></div>\r\n      <div>\r\n        <img\r\n          src={`https://robohash.org/${robot.username}?size=200x200`}\r\n          alt=\"robots\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <h2>{robot.name}</h2>\r\n        <p>{robot.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <>\r\n      {robots.map((robot, index) => (\r\n        <Card robot={robot} key={index} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: 'scroll',\r\n        border: '5px solid black',\r\n        height: '800px',\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"text\"\r\n        placeholder=\"search robot\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super(); //calls constructor of this component\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((res) => res.json())\r\n      .then((users) => {\r\n        this.setState({\r\n          robots: users,\r\n        });\r\n      });\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({\r\n      searchfield: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter((robots) => {\r\n      //this will return only the robots whose name is same as searched input\r\n      return robots.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n    const robots = this.state.robots;\r\n    if (robots.length === 0) {\r\n      return <h1>Loading...</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}